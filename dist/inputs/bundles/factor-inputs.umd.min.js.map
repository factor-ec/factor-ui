{"version":3,"sources":["ng://factor-inputs/lib/file-picker/file-picker.component.ts","ng://factor-inputs/lib/invalid-feedback/invalid-feedback.component.ts","ng://factor-inputs/lib/list/list.component.ts","ng://factor-inputs/lib/rating/rating.component.ts","ng://factor-inputs/lib/select/select.component.ts","ng://factor-inputs/lib/text-input/text-input.component.ts","ng://factor-inputs/lib/text-area/text-area.component.ts","ng://factor-inputs/lib/inputs.module.ts"],"names":["FilePickerComponent","elementRef","this","propagateChange","_","createInput","Object","defineProperty","prototype","value","fileInput","accept","disabled","multiple","ngOnInit","_this","componentElement","nativeElement","document","createElement","style","display","type","addEventListener","event","FileReader","loadValue","target","files","appendChild","length","data_1","i","file","item","reader","readAsDataURL","onload","push","data","result","lastModifiedDate","name","size","openDialog","click","_value","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","updateValue","writeValue","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ElementRef","Input","HostBinding","HostListener","InvalidFeedbackComponent","defaultMessages","required","params","min","max","minlength","requiredLength","maxlength","pattern","email","messages","getError","control","errors","keys","map","field","getMessage","fname","getControlName","replace","toLowerCase","l","toUpperCase","msg","dirty","touched","formGroup","parent","controls","find","ListComponent","RatingComponent","stars","setRate","isHover","hover","SelectComponent","ViewChild","TextInputComponent","input","TextAreaComponent","autosize","InputsModule","NgModule","declarations","imports","CommonModule","FactorCommonModule","exports"],"mappings":"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","sourcesContent":["import { Component, ElementRef, forwardRef, HostBinding, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ft-file-picker',\n  templateUrl: './file-picker.component.html',\n  styleUrls: ['./file-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => FilePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class FilePickerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  set accept (value: string) {\n    this.fileInput.accept = value;\n  }\n  @Input()\n  set disabled (value: boolean) {\n    this.fileInput.disabled = value;\n  }\n  @Input()\n  set multiple (value: boolean) {\n    this.fileInput.multiple = value;\n  }\n  @HostBinding('class.dragover')\n  dragover: boolean;\n  fileInput: HTMLInputElement;\n  _value: string;\n  propagateChange = (_: any) => { };\n\n  constructor(private elementRef: ElementRef) {\n    this.createInput();\n  }\n\n  ngOnInit() {\n\n  }\n  createInput() {\n    const componentElement = this.elementRef.nativeElement;\n    this.fileInput = document.createElement('input');\n    this.fileInput.style.display = 'none';\n    this.fileInput.type = 'file';\n    this.fileInput.addEventListener('change', (event: any) => {\n      const reader = new FileReader();\n      this.loadValue(event.target.files);\n    });\n    componentElement.appendChild(this.fileInput);\n  }\n  loadValue(files) {\n    if (files && files.length>0) {\n      let data: any[] = [];\n      for (let i = 0; i<files.length; i++) {\n        const file = files.item(i);\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          data.push({\n            data: reader.result,\n            lastModifiedDate: file.lastModifiedDate,\n            name: file.name,\n            size: file.size,\n            type: file.type\n          });\n          if (data.length==files.length) {\n            this.value = data.length>0? data : null;\n          }\n        };\n      }\n    }\n  }\n  @HostListener('click')\n  openDialog() {\n    this.fileInput.click();\n  }\n  get value() {\n    return this._value;\n  }\n  @Input()\n  set value(value: any) {\n    this._value = value;\n    this.propagateChange(this._value);\n  }\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn) {\n    //this.propagateChange = fn;\n  }\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n  updateValue(event: any) {\n    this.value = event.target.value;\n  }\n  writeValue(value: string) {\n    this.value = value;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\n/**\n * Componente para mostrar mensajes de error en los inputs\n */\n@Component({\n  selector: 'ft-invalid-feedback',\n  templateUrl: './invalid-feedback.component.html',\n  styleUrls: ['./invalid-feedback.component.scss']\n})\nexport class InvalidFeedbackComponent {\n  /**\n   * CatÃ¡logo de mensajes segÃºn el tipo de error\n   */\n  private readonly defaultMessages = {\n    'required': (params) => 'Is required',\n    'min': (params) => 'Should be a valid',\n    'max': (params) => 'Should be a valid',\n    'minlength': (params) => '##FIELD## should be minimum ' + params.requiredLength + ' characters',\n    'maxlength': (params) => '##FIELD## should not be greater then ' + params.requiredLength + ' characters',\n    'pattern': (params) => 'Should be a valid',\n    'email': (params) => \"Should be valid email.\",\n    'file': (params) => 'File must be valid'\n  };\n  @Input()\n  private messages: any = {};\n  /**\n   * El input para mostrar el mensaje\n   */\n  @Input()\n  private control: AbstractControlDirective | AbstractControl;\n  /**\n   * MÃ©toro que devuelve el error segÃºn corresponda\n   */\n  getError(): string {\n    let objects = this.control.errors;\n    if (objects !== null) {\n      var errors = Object.keys(this.control.errors)\n        .map(field => this.getMessage(field, this.control.errors[field], this.control));\n      return errors[0];\n    }\n  }\n  /**\n   * MÃ©todo que obtiene el mensaje de error\n   */\n  private getMessage(type: string, params: any, control: any) {\n    var fname = this.getControlName(control);\n    fname = fname.replace(\"_\", \" \").replace(\" id\", \"\").toLowerCase();\n    fname = fname.replace(/\\b\\w/g, l => l.toUpperCase())\n\n    var msg = this.messages[type] || this.defaultMessages[type](params) || 'Error';\n    return control.dirty || control.touched? msg.replace(\"##FIELD##\", fname) : '';\n  }\n  /**\n   * Obtiene el name del control (input)\n   * @param control AbstractControl es el control con sus propiedades\n   */\n  getControlName(control: AbstractControl): string | null {\n    const formGroup = control.parent.controls;\n    return Object.keys(formGroup).find(name => control === formGroup[name]) || null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ft-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, HostBinding, forwardRef, ElementRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ft-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RatingComponent),\n      multi: true\n    }\n  ]\n})\nexport class RatingComponent implements OnInit, ControlValueAccessor {\n  disabled: boolean;\n  hover: number;\n  propagateChange = (_: any) => { };\n  @Input()\n  readOnly: boolean;\n  stars: any[] = [\n    { value: 1 },\n    { value: 2 },\n    { value: 3 },\n    { value: 4 },\n    { value: 5 }\n  ];\n  _value: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  get value() {\n    return this._value;\n  }\n  @Input()\n  set value(value: any) {\n    this._value = value;\n    this.propagateChange(this._value);\n  }\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.propagateChange = fn;\n  }\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n  setRate(value, isHover?) {\n    if (isHover) {\n      this.hover = value;\n    } else {\n      this.value = value;\n    }\n  }\n  updateValue(event: any) {\n    this.value = event.target.value;\n  }\n  writeValue(value: string) {\n    this.value = value;\n  }\n\n}\n","import { Component, OnInit, Input, HostBinding, forwardRef, ElementRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ft-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SelectComponent),\n      multi: true\n    }\n  ]\n})\nexport class SelectComponent implements OnInit, ControlValueAccessor {\n  disabled: boolean;\n  @Input()\n  options: any[];\n  @Input()\n  label: string;\n  @Input()\n  required: boolean;\n  @Input()\n  style: 'default' | 'outline';\n  @ViewChild('select')\n  select: ElementRef<any>;\n  _value: string;\n  propagateChange = (_: any) => { };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  get value() {\n    return this._value;\n  }\n  @Input()\n  set value(value: any) {\n    //this.input.nativeElement.value = value;\n    this._value = value;\n    this.propagateChange(this._value);\n  }\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    //this.propagateChange = fn;\n  }\n  updateValue(event: any) {\n    this.value = event.target.value;\n  }\n  writeValue(value: string) {\n    this.value = value;\n  }\n\n}\n","import { Component, OnInit, Input, HostBinding, forwardRef, ElementRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ft-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextInputComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  autofocus: boolean;\n  disabled: boolean;\n  @ViewChild('input')\n  input: ElementRef<any>;\n  @Input()\n  label: string;\n  @Input()\n  max: boolean;\n  @Input()\n  maxLength: boolean;\n  @Input()\n  min: boolean;\n  propagateChange = (_: any) => { };\n  @Input()\n  readOnly: boolean;\n  @Input()\n  required: boolean;\n  @Input()\n  type: string = 'text';\n  _value: string;\n\n  constructor() { }\n\n  ngOnInit() { }\n  get value() {\n    return this._value;\n  }\n  @Input()\n  set value(value: any) {\n    this.input.nativeElement.value = value;\n    this._value = value;\n    this.propagateChange(this._value);\n  }\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    //this.propagateChange = fn;\n  }\n  updateValue(event: any) {\n    this.value = event.target.value;\n  }\n  writeValue(value: string) {\n    this.value = value;\n  }\n\n}\n","import { Component, OnInit, Input, HostBinding, forwardRef, ElementRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ft-text-area',\n  templateUrl: './text-area.component.html',\n  styleUrls: ['./text-area.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextAreaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextAreaComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  autofocus: boolean;\n  @Input()\n  @HostBinding('class.autosize')\n  autosize: boolean;\n  disabled: boolean;\n  @ViewChild('input')\n  input: ElementRef<any>;\n  @Input()\n  label: string;\n  @Input()\n  maxHeight: number;\n  @Input()\n  maxLength: boolean;\n  @Input()\n  minHeight: number;\n  propagateChange = (_: any) => { };\n  @Input()\n  readOnly: boolean;\n  @Input()\n  required: boolean;\n  _value: string;\n\n  constructor() { }\n\n  ngOnInit() { }\n  get value() {\n    return this._value;\n  }\n  @Input()\n  set value(value: any) {\n    this.input.nativeElement.value = value;\n    this._value = value;\n    this.propagateChange(this._value);\n  }\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    //this.propagateChange = fn;\n  }\n  updateValue(event: any) {\n    this.value = event.target.value;\n    if (this.autosize) {\n      //this.fitToContent(this.maxHeight);\n    }\n  }\n  writeValue(value: string) {\n    this.value = value;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CommonModule as FactorCommonModule } from 'factor-common';\n\nimport { FilePickerComponent } from './file-picker/file-picker.component';\nimport { InvalidFeedbackComponent } from './invalid-feedback/invalid-feedback.component';\nimport { ListComponent } from './list/list.component';\nimport { RatingComponent } from './rating/rating.component';\nimport { SelectComponent } from './select/select.component';\nimport { TextInputComponent } from './text-input/text-input.component';\nimport { TextAreaComponent } from './text-area/text-area.component';\n\n@NgModule({\n  declarations: [\n    FilePickerComponent,\n    InvalidFeedbackComponent,\n    ListComponent,\n    RatingComponent,\n    SelectComponent,\n    TextInputComponent,\n    TextAreaComponent\n  ],\n  imports: [\n    CommonModule,\n    FactorCommonModule\n  ],\n  exports: [\n    FilePickerComponent,\n    InvalidFeedbackComponent,\n    ListComponent,\n    RatingComponent,\n    SelectComponent,\n    TextInputComponent,\n    TextAreaComponent\n  ]\n})\nexport class InputsModule { }\n"]}