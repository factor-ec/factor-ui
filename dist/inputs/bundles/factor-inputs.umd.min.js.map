{"version":3,"sources":["ng://factor-inputs/lib/file-picker/file-picker.component.ts","ng://factor-inputs/lib/invalid-feedback/invalid-feedback.component.ts","ng://factor-inputs/lib/list/list.component.ts","ng://factor-inputs/lib/rating/rating.component.ts","ng://factor-inputs/lib/select/select.component.ts","ng://factor-inputs/lib/text-input/text-input.component.ts","ng://factor-inputs/lib/text-area/text-area.component.ts","ng://factor-inputs/lib/inputs.module.ts"],"names":["FilePickerComponent","elementRef","this","propagateChange","_","createInput","Object","defineProperty","prototype","value","fileInput","accept","disabled","multiple","ngOnInit","_this","componentElement","nativeElement","document","createElement","style","display","type","addEventListener","event","FileReader","loadValue","target","files","appendChild","length","data_1","i","file","item","reader","readAsDataURL","onload","push","data","result","lastModifiedDate","name","size","openDialog","click","_value","writeValue","registerOnChange","fn","registerOnTouched","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ElementRef","Input","HostBinding","HostListener","InvalidFeedbackComponent","defaultMessages","required","params","min","max","minlength","requiredLength","maxlength","pattern","email","messages","getError","control","errors","keys","map","field","getMessage","fname","getControlName","replace","toLowerCase","l","toUpperCase","msg","dirty","touched","formGroup","parent","controls","find","ListComponent","RatingComponent","stars","setRating","isHover","overRating","rating","host","class","SelectComponent","updateValue","ViewChild","TextInputComponent","input","TextAreaComponent","fitToContent","maxHeight","adjustedHeight","clientHeight","Math","scrollHeight","height","autosize","InputsModule","NgModule","declarations","imports","CommonModule","FactorCommonModule","exports"],"mappings":"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","sourcesContent":["import { Component, ElementRef, forwardRef, HostBinding, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ft-file-picker',\n  templateUrl: './file-picker.component.html',\n  styleUrls: ['./file-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => FilePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class FilePickerComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  set accept (value: string) {\n    this.fileInput.accept = value;\n  }\n  @Input()\n  set disabled (value: boolean) {\n    this.fileInput.disabled = value;\n  }\n  @Input()\n  set multiple (value: boolean) {\n    this.fileInput.multiple = value;\n  }\n  @HostBinding('class.dragover') dragover: boolean;\n  fileInput: HTMLInputElement;\n  _value: string;\n  propagateChange = (_: any) => { };\n\n  constructor(private elementRef: ElementRef) {\n    this.createInput();\n  }\n\n  ngOnInit() {\n\n  }\n  createInput() {\n    const componentElement = this.elementRef.nativeElement;\n    this.fileInput = document.createElement('input');\n    this.fileInput.style.display = 'none';\n    this.fileInput.type = 'file';\n    this.fileInput.addEventListener('change', (event: any) => {\n      const reader = new FileReader();\n      this.loadValue(event.target.files);\n    });\n    componentElement.appendChild(this.fileInput);\n  }\n  loadValue(files) {\n    if (files && files.length>0) {\n      let data: any[] = [];\n      for (let i = 0; i<files.length; i++) {\n        const file = files.item(i);\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          data.push({\n            data: reader.result,\n            lastModifiedDate: file.lastModifiedDate,\n            name: file.name,\n            size: file.size,\n            type: file.type\n          });\n          if (data.length==files.length) {\n            this.value = data.length>0? data : null;\n          }\n        };\n      }\n    }\n  }\n  @HostListener('click')\n  openDialog() {\n    this.fileInput.click();\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n    this.propagateChange(this._value);\n  }\n  writeValue(value: any) { }\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  registerOnTouched() { }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\n/**\n * Componente para mostrar mensajes de error en los inputs\n */\n@Component({\n  selector: 'ft-invalid-feedback',\n  templateUrl: './invalid-feedback.component.html',\n  styleUrls: ['./invalid-feedback.component.scss']\n})\nexport class InvalidFeedbackComponent {\n  /**\n   * CatÃ¡logo de mensajes segÃºn el tipo de error\n   */\n  private readonly defaultMessages = {\n    'required': (params) => 'Is required',\n    'min': (params) => 'Should be a valid',\n    'max': (params) => 'Should be a valid',\n    'minlength': (params) => '##FIELD## should be minimum ' + params.requiredLength + ' characters',\n    'maxlength': (params) => '##FIELD## should not be greater then ' + params.requiredLength + ' characters',\n    'pattern': (params) => 'Should be a valid',\n    'email': (params) => \"Should be valid email.\",\n    'file': (params) => 'File must be valid'\n  };\n  @Input()\n  private messages: any = {};\n  /**\n   * El input para mostrar el mensaje\n   */\n  @Input()\n  private control: AbstractControlDirective | AbstractControl;\n  /**\n   * MÃ©toro que devuelve el error segÃºn corresponda\n   */\n  getError(): string {\n    let objects = this.control.errors;\n    if (objects !== null) {\n      var errors = Object.keys(this.control.errors)\n        .map(field => this.getMessage(field, this.control.errors[field], this.control));\n      return errors[0];\n    }\n  }\n  /**\n   * MÃ©todo que obtiene el mensaje de error\n   */\n  private getMessage(type: string, params: any, control: any) {\n    var fname = this.getControlName(control);\n    fname = fname.replace(\"_\", \" \").replace(\" id\", \"\").toLowerCase();\n    fname = fname.replace(/\\b\\w/g, l => l.toUpperCase())\n\n    var msg = this.messages[type] || this.defaultMessages[type](params) || 'Error';\n    return control.dirty || control.touched? msg.replace(\"##FIELD##\", fname) : '';\n  }\n  /**\n   * Obtiene el name del control (input)\n   * @param control AbstractControl es el control con sus propiedades\n   */\n  getControlName(control: AbstractControl): string | null {\n    const formGroup = control.parent.controls;\n    return Object.keys(formGroup).find(name => control === formGroup[name]) || null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ft-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ft-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.scss'],\n  host: { class: 'd-flex' }\n})\nexport class RatingComponent implements OnInit {\n  stars: any[] = [\n    { value: 1 },\n    { value: 2 },\n    { value: 3 },\n    { value: 4 },\n    { value: 5 }\n  ];\n  overRating: number;\n  rating: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  setRating(value, isHover?) {\n    if (isHover) {\n      this.overRating = value;\n    } else {\n      this.rating = value;\n    }\n\n  }\n\n}\n","import { Component, OnInit, Input, HostBinding, forwardRef, ElementRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ft-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SelectComponent),\n      multi: true\n    }\n  ]\n})\nexport class SelectComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  disabled: boolean;\n  @Input()\n  options: any[];\n  @Input()\n  label: string;\n  @Input()\n  required: boolean;\n  @Input()\n  style: 'default' | 'outline';\n  @ViewChild('select')\n  select: ElementRef<any>;\n  _value: string;\n  propagateChange = (_: any) => { };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n    this.propagateChange(this._value);\n  }\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  registerOnTouched() { }\n  updateValue(event: any) {\n    this.value =  event.target.value;\n  }\n  writeValue(value: string) {\n    this.value = value;\n  }\n\n}\n","import { Component, OnInit, Input, HostBinding, forwardRef, ElementRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ft-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextInputComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  autofocus: boolean;\n  @Input()\n  disabled: boolean;\n  @ViewChild('input')\n  input: ElementRef<any>;\n  @Input()\n  label: string;\n  @Input()\n  max: boolean;\n  @Input()\n  maxLength: boolean;\n  @Input()\n  min: boolean;\n  propagateChange = (_: any) => { };\n  @Input()\n  readOnly: boolean;\n  @Input()\n  required: boolean;\n  @Input()\n  type: string = 'text';\n  _value: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  get value() {\n    return this._value;\n  }\n  @Input()\n  set value(value: any) {\n    this.input.nativeElement.value = value;\n    this._value = value;\n    this.propagateChange(this._value);\n  }\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  registerOnTouched() { }\n  updateValue(event: any) {\n    this.value =  event.target.value;\n  }\n  writeValue(value: string) {\n    this.value = value;\n  }\n\n}\n","import { Component, OnInit, Input, HostBinding, forwardRef, ElementRef, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'ft-text-area',\n  templateUrl: './text-area.component.html',\n  styleUrls: ['./text-area.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextAreaComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextAreaComponent implements OnInit, ControlValueAccessor {\n  @Input()\n  autofocus: boolean;\n  @Input()\n  @HostBinding('class.autosize')\n  autosize: boolean;\n  @Input()\n  disabled: boolean;\n  @ViewChild('input')\n  input: ElementRef<any>;\n  @Input()\n  label: string;\n  @Input()\n  maxHeight: number;\n  @Input()\n  maxLength: boolean;\n  @Input()\n  minHeight: number;\n  propagateChange = (_: any) => { };\n  @Input()\n  readOnly: boolean;\n  @Input()\n  required: boolean;\n  _value: string;\n\n  constructor() { }\n\n  ngOnInit() { }\n  get value() {\n    return this._value;\n  }\n  @Input()\n  set value(value: any) {\n    this.input.nativeElement.value = value;\n    this._value = value;\n    this.propagateChange(this._value);\n  }\n  fitToContent(maxHeight: number) {\n    const input = this.input.nativeElement;\n    let adjustedHeight = input.clientHeight;\n    if (!maxHeight || maxHeight > adjustedHeight) {\n      adjustedHeight = Math.max(input.scrollHeight, adjustedHeight);\n      if (maxHeight) {\n        adjustedHeight = Math.min(maxHeight, adjustedHeight);\n      }\n      input.style.height = adjustedHeight + \"px\";\n    }\n  }\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n  registerOnTouched() { }\n  updateValue(event: any) {\n    this.value = event.target.value;\n    if (this.autosize) {\n      this.fitToContent(this.maxHeight);\n    }\n  }\n  writeValue(value: string) {\n    this.value = value;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CommonModule as FactorCommonModule } from 'factor-common';\n\nimport { FilePickerComponent } from './file-picker/file-picker.component';\nimport { InvalidFeedbackComponent } from './invalid-feedback/invalid-feedback.component';\nimport { ListComponent } from './list/list.component';\nimport { RatingComponent } from './rating/rating.component';\nimport { SelectComponent } from './select/select.component';\nimport { TextInputComponent } from './text-input/text-input.component';\nimport { TextAreaComponent } from './text-area/text-area.component';\n\n@NgModule({\n  declarations: [\n    FilePickerComponent,\n    InvalidFeedbackComponent,\n    ListComponent,\n    RatingComponent,\n    SelectComponent,\n    TextInputComponent,\n    TextAreaComponent\n  ],\n  imports: [\n    CommonModule,\n    FactorCommonModule\n  ],\n  exports: [\n    FilePickerComponent,\n    InvalidFeedbackComponent,\n    ListComponent,\n    RatingComponent,\n    SelectComponent,\n    TextInputComponent,\n    TextAreaComponent\n  ]\n})\nexport class InputsModule { }\n"]}