{"version":3,"file":"factor-common.js","sources":["ng://factor-common/lib/avatar/avatar.component.ts","ng://factor-common/lib/icon/icon.component.ts","ng://factor-common/lib/image/image.component.ts","ng://factor-common/lib/progress/progress.component.ts","ng://factor-common/lib/observe-intersecting.directive.ts","ng://factor-common/lib/common.module.ts","ng://factor-common/public-api.ts","ng://factor-common/factor-common.ts"],"sourcesContent":["import { Component, HostBinding, OnInit, Input } from '@angular/core';\n\nimport { ColorService } from 'factor-utils';\n\n@Component({\n  selector: 'ft-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss']\n})\nexport class AvatarComponent implements OnInit {\n  _label: string;\n  _src: string;\n  initials: string;\n  loaded: boolean;\n  @Input()\n  set src(value: string) {\n    if (value && value.trim()!='') {\n      this._src = value;\n      let image = new Image();\n      image.src = value;\n      image.onload = () => {\n        if (\"decode\" in image) {\n          image.decode().then(() => {\n            this.loaded = true;\n          });\n        } else {\n          console.error('Image.decode not available.');\n        }\n      };\n    }\n  }\n  @Input()\n  set label(value: string) {\n    this._label = value;\n    this.initials = this.getInitials(value);\n  }\n  @HostBinding('style.background-color')\n  get backgroundColor(): string {\n    return this.colorService.hex(this._label);\n  }\n  @HostBinding('style.background-image')\n  get backgroundImage(): string {\n    return this._src ? `url(${this._src})` : '';\n  }\n\n  constructor(\n    private colorService: ColorService\n  ) { }\n\n  ngOnInit() {\n\n  }\n  getInitials(value: string): string {\n    let allInitials: string[] = value.match(/\\b\\w/g) || [];\n    let initials: string = ((allInitials.shift() || '') + (allInitials.pop() || '')).toUpperCase();\n    return initials;\n  }\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\n\n@Component({\n  selector: 'ft-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n  @Input()\n  name: string;\n  @Input()\n  collection: string;\n  @Input()\n  path: string;\n  @Input()\n  size: string;\n\n  constructor(\n    @Inject('FactorCommonConfiguration') private configuration\n  ) { }\n\n  ngOnInit() {\n    if (!this.collection) {\n      if (this.configuration.icon && this.configuration.icon.collection) {\n        this.collection = this.configuration.icon.collection;\n      } else {\n        this.collection = 'icons';\n      }\n    }\n    if (!this.path) {\n      if (this.configuration.icon && this.configuration.icon.path) {\n        this.path = this.configuration.icon.path;\n      } else {\n        this.path = 'assets';\n      }\n    }\n  }\n}\n","import { Component, OnInit, Input, HostBinding, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'ft-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit {\n  @HostBinding('class.ft-image--error')\n  error: boolean;\n  @HostBinding('class.ft-image--loading')\n  loading: boolean;\n  @Input()\n  src: string;\n  shown: boolean;\n\n  constructor(\n    private element: ElementRef\n  ) { }\n\n  ngOnInit() {\n    if (\"IntersectionObserver\" in window) {\n      let elementObserver = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            let image = new Image();\n            image.src = this.src;\n            setTimeout(() => {\n              this.loading = true;\n            }, 100);\n            image.onerror = () => {\n              this.error = true;\n              this.loading = false;\n            };\n            image.onload = () => {\n              if (\"decode\" in image) {\n                image.decode().then(() => {\n                  this.loading = false;\n                  this.shown = true;\n                });\n              } else {\n                console.error('Image.decode not available.');\n              }\n            };\n            elementObserver.unobserve(this.element.nativeElement);\n          }\n        });\n      }, {\n        rootMargin: \"0px 0px 200px 0px\"\n      });\n      elementObserver.observe(this.element.nativeElement);\n    } else {\n      console.error('IntersectionObserver not available.');\n      this.loading = false;\n      this.shown = true;\n    }\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'ft-progress',\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss']\n})\nexport class ProgressComponent implements OnInit {\n  @Input()\n  color: string;\n  @Input()\n  mode: 'determinate' | 'indeterminate' = 'indeterminate';\n  @Input()\n  size: number;\n  @Input()\n  value: number;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.color = this.color || 'var(--primary)';\n    this.value = 0;\n  }\n\n}\n","import { Directive, EventEmitter, OnInit, Output, Input, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[ftObserveIntersecting]'\n})\nexport class ObserveIntersectingDirective implements OnInit {\n  @Input('ftObserveIntersectingOptions')\n  options: { root: any, rootMargin: any, threshold: any };\n  @Output('ftObserveIntersecting')\n  event: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(\n    private element: ElementRef\n  ) { }\n\n  ngOnInit() {\n    if (\"IntersectionObserver\" in window) {\n      const elementObserver = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          this.event.emit(entry.isIntersecting);\n        });\n      }, this.options);\n      elementObserver.observe(this.element.nativeElement);\n    } else {\n      console.error('ftObserveIntersecting not available in this browser.');\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule as AngularCommonModule } from '@angular/common';\n\nimport { AvatarComponent } from './avatar/avatar.component';\nimport { IconComponent } from './icon/icon.component';\nimport { ImageComponent } from './image/image.component';\nimport { ObserveIntersectingDirective } from './observe-intersecting.directive';\nimport { ProgressComponent } from './progress/progress.component';\n\n@NgModule({\n  declarations: [\n    AvatarComponent,\n    IconComponent,\n    ImageComponent,\n    ObserveIntersectingDirective,\n    ProgressComponent\n  ],\n  imports: [\n    AngularCommonModule\n  ],\n  exports: [\n    AvatarComponent,\n    IconComponent,\n    ImageComponent,\n    ObserveIntersectingDirective,\n    ProgressComponent\n  ]\n})\nexport class CommonModule {\n  public static forRoot(configuration?: any): ModuleWithProviders {\n    return {\n      ngModule: CommonModule,\n      providers: [\n        { provide: 'FactorCommonConfiguration', useValue: configuration }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of common\n */\n\n export * from './lib/avatar/avatar.component';\n export * from './lib/icon/icon.component';\n export * from './lib/image/image.component';\n export * from './lib/progress/progress.component';\n export * from './lib/observe-intersecting.directive';\n export * from './lib/common.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["AngularCommonModule"],"mappings":"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"}