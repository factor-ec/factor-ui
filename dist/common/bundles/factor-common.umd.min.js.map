{"version":3,"sources":["ng://factor-common/lib/icon/icon.component.ts","ng://factor-common/lib/image/image.component.ts","ng://factor-common/lib/common.module.ts"],"names":["IconComponent","configuration","this","prototype","ngOnInit","collection","icon","path","Component","args","selector","template","Inject","Input","ImageComponent","element","_this","window","elementObserver_1","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","image_1","Image","src","loading","onerror","error","onload","decode","then","shown","console","unobserve","nativeElement","rootMargin","observe","ElementRef","HostBinding","CommonModule","forRoot","ngModule","providers","provide","useValue","NgModule","declarations","imports","AngularCommonModule","exports"],"mappings":"mUAAA,IAAAA,EAAA,WAeE,SAAAA,EAC+CC,GAAAC,KAAAD,cAAAA,EAejD,OAZED,EAAAG,UAAAC,SAAA,WACOF,KAAKG,aACJH,KAAKD,cAAcK,MAAQJ,KAAKD,cAAcK,KAAKD,WACrDH,KAAKG,WAAaH,KAAKD,cAAcK,KAAKD,WAE1CH,KAAKG,WAAa,SAGjBH,KAAKK,OACRL,KAAKK,KAAO,gCA1BjBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,UACVC,SAAA,2lBAYGC,EAAAA,OAAMH,KAAA,CAAC,gEARTI,EAAAA,0BAEAA,EAAAA,oBAEAA,EAAAA,SAmBHb,EA/BA,GCAAc,EAAA,WAgBE,SAAAA,EACUC,GAAAb,KAAAa,QAAAA,EAsCZ,OAnCED,EAAAX,UAAAC,SAAA,WAAA,IAAAY,EAAAd,KACE,GAAI,yBAA0Be,OAAQ,KAChCC,EAAkB,IAAIC,qBAAqB,SAACC,EAASC,GACvDD,EAAQE,QAAQ,SAACC,GACf,GAAIA,EAAMC,eAAgB,KACpBC,EAAQ,IAAIC,MAChBD,EAAME,IAAMX,EAAKW,IACjBX,EAAKY,SAAU,EACfH,EAAMI,QAAU,WACdb,EAAKc,OAAQ,EACbd,EAAKY,SAAU,GAEjBH,EAAMM,OAAS,WACT,WAAYN,EACdA,EAAMO,SAASC,KAAK,WAClBjB,EAAKY,SAAU,EACfZ,EAAKkB,OAAQ,IAGfC,QAAQL,MAAM,gCAGlBZ,EAAgBkB,UAAUpB,EAAKD,QAAQsB,mBAG1C,CACCC,WAAY,oBAEhBpB,EAAgBqB,QAAQrC,KAAKa,QAAQsB,oBAErCF,QAAQL,MAAM,uCACd5B,KAAKgC,OAAQ,uBAjDlB1B,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,WACVC,SAAA,klCAJ8C6B,EAAAA,6CAQ7CC,EAAAA,YAAWhC,KAAA,CAAC,gCAEZgC,EAAAA,YAAWhC,KAAA,CAAC,8BAEZI,EAAAA,SA2CHC,EAvDA,GCAA4B,EAAA,WAKA,SAAAA,KAsBA,OARgBA,EAAAC,QAAd,SAAsB1C,GACpB,MAAO,CACL2C,SAAUF,EACVG,UAAW,CACT,CAAEC,QAAS,4BAA6BC,SAAU9C,0BAlBzD+C,EAAAA,SAAQvC,KAAA,CAAC,CACRwC,aAAc,CACZjD,EACAc,GAEFoC,QAAS,CACPC,EAAAA,cAEFC,QAAS,CACPpD,EACAc,OAYJ4B,EA3BA","sourcesContent":["import { Component, OnInit, Input, Inject } from '@angular/core';\n\n@Component({\n  selector: 'ft-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n  @Input()\n  name: string;\n  @Input()\n  collection: string;\n  @Input()\n  path: string;\n\n  constructor(\n    @Inject('FactorCommonConfiguration') private configuration\n  ) { }\n\n  ngOnInit() {\n    if (!this.collection) {\n      if (this.configuration.icon && this.configuration.icon.collection) {\n        this.collection = this.configuration.icon.collection;\n      } else {\n        this.collection = 'icons';\n      }\n    }\n    if (!this.path) {\n      this.path = 'assets/';\n    }\n  }\n}\n","import { Component, OnInit, Input, HostBinding, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'ft-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit {\n  @HostBinding('class.error')\n  error: boolean;\n  @HostBinding('class.loading')\n  loading: boolean;\n  @Input()\n  src: string;\n  shown: boolean;\n\n  constructor(\n    private element: ElementRef\n  ) { }\n\n  ngOnInit() {\n    if (\"IntersectionObserver\" in window) {\n      let elementObserver = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            let image = new Image();\n            image.src = this.src;\n            this.loading = true;\n            image.onerror = () => {\n              this.error = true;\n              this.loading = false;\n            };\n            image.onload = () => {\n              if (\"decode\" in image) {\n                image.decode().then(() => {\n                  this.loading = false;\n                  this.shown = true;\n                });\n              } else {\n                console.error('Image.decode not available.');\n              }\n            };\n            elementObserver.unobserve(this.element.nativeElement);\n          }\n        });\n      }, {\n          rootMargin: \"0px 0px 0px 0px\"\n        });\n      elementObserver.observe(this.element.nativeElement);\n    } else {\n      console.error('IntersectionObserver not available.');\n      this.shown = true;\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule as AngularCommonModule } from '@angular/common';\nimport { IconComponent } from './icon/icon.component';\nimport { ImageComponent } from './image/image.component';\n\n@NgModule({\n  declarations: [\n    IconComponent,\n    ImageComponent\n  ],\n  imports: [\n    AngularCommonModule\n  ],\n  exports: [\n    IconComponent,\n    ImageComponent\n  ]\n})\nexport class CommonModule {\n  public static forRoot(configuration: any): ModuleWithProviders {\n    return {\n      ngModule: CommonModule,\n      providers: [\n        { provide: 'FactorCommonConfiguration', useValue: configuration }\n      ]\n    };\n  }\n}\n"]}