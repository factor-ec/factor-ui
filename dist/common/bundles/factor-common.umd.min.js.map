{"version":3,"sources":["ng://factor-common/lib/icon/icon.component.ts","ng://factor-common/lib/common.module.ts"],"names":["IconComponent","configuration","this","prototype","ngOnInit","collection","icon","path","Component","args","selector","template","Inject","Input","CommonModule","forRoot","ngModule","providers","provide","useValue","NgModule","declarations","imports","exports"],"mappings":"wQAAA,IAAAA,EAAA,WAeE,SAAAA,EAC+CC,GAAAC,KAAAD,cAAAA,EAejD,OAZED,EAAAG,UAAAC,SAAA,WACOF,KAAKG,aACJH,KAAKD,cAAcK,MAAQJ,KAAKD,cAAcK,KAAKD,WACrDH,KAAKG,WAAaH,KAAKD,cAAcK,KAAKD,WAE1CH,KAAKG,WAAa,SAGjBH,KAAKK,OACRL,KAAKK,KAAO,gCA1BjBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,UACVC,SAAA,0hBAYGC,EAAAA,OAAMH,KAAA,CAAC,gEARTI,EAAAA,0BAEAA,EAAAA,oBAEAA,EAAAA,SAmBHb,EA/BA,GCAAc,EAAA,WAGA,SAAAA,KAmBA,OARgBA,EAAAC,QAAd,SAAsBd,GACpB,MAAO,CACLe,SAAUF,EACVG,UAAW,CACT,CAAEC,QAAS,4BAA6BC,SAAUlB,0BAfzDmB,EAAAA,SAAQX,KAAA,CAAC,CACRY,aAAc,CACZrB,GAEFsB,QAAS,GAETC,QAAS,CACPvB,OAYJc,EAtBA","sourcesContent":["import { Component, OnInit, Input, Inject } from '@angular/core';\n\n@Component({\n  selector: 'ft-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n  @Input()\n  name: string;\n  @Input()\n  collection: string;\n  @Input()\n  path: string;\n\n  constructor(\n    @Inject('FactorCommonConfiguration') private configuration\n  ) { }\n\n  ngOnInit() {\n    if (!this.collection) {\n      if (this.configuration.icon && this.configuration.icon.collection) {\n        this.collection = this.configuration.icon.collection;\n      } else {\n        this.collection = 'icons';\n      }\n    }\n    if (!this.path) {\n      this.path = 'assets/';\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { IconComponent } from './icon/icon.component';\n\n@NgModule({\n  declarations: [\n    IconComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    IconComponent\n  ]\n})\nexport class CommonModule {\n  public static forRoot(configuration: any): ModuleWithProviders {\n    return {\n      ngModule: CommonModule,\n      providers: [\n        { provide: 'FactorCommonConfiguration', useValue: configuration }\n      ]\n    };\n  }\n}\n"]}