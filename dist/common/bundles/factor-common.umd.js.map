{"version":3,"file":"factor-common.umd.js.map","sources":["ng://factor-common/lib/color.service.ts","ng://factor-common/lib/avatar/avatar.component.ts","ng://factor-common/lib/icon/icon.component.ts","ng://factor-common/lib/image/image.component.ts","ng://factor-common/lib/observe-intersecting.directive.ts","ng://factor-common/lib/progress/progress.component.ts","ng://factor-common/lib/common.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorService {\n  L: number[];\n  S: number[];\n  hueRanges: {min: number, max: number}[];\n\n  constructor() {\n    const options: any = {};\n    let LS = [options.lightness, options.saturation].map(function(param) {\n      param = param || [0.35, 0.5, 0.65]; // note that 3 is a prime\n      return Array.isArray(param) ? param.concat() : [param];\n    });\n\n    this.L = LS[0];\n    this.S = LS[1];\n\n    if (typeof options.hue === 'number') {\n      options.hue = { min: options.hue, max: options.hue };\n    }\n    if (typeof options.hue === 'object' && !Array.isArray(options.hue)) {\n      options.hue = [options.hue];\n    }\n    if (typeof options.hue === 'undefined') {\n      options.hue = [];\n    }\n    this.hueRanges = options.hue.map(function(range) {\n      return {\n        min: typeof range.min === 'undefined' ? 0 : range.min,\n        max: typeof range.max === 'undefined' ? 360 : range.max\n      };\n    });\n  }\n\n  /**\n   * BKDR Hash (modified version)\n   *\n   * @param str string to hash\n   */\n  hash(str: string): number {\n    let seed = 131;\n    let seed2 = 137;\n    let hash = 0;\n    // make hash more sensitive for short string like 'a', 'b', 'c'\n    str += 'x';\n    // Note: Number.MAX_SAFE_INTEGER equals 9007199254740991\n    const maxSafeInteger: number = Math.round(9007199254740991 / seed2);\n    for (let i = 0; i < str.length; i++) {\n      if (hash > maxSafeInteger) {\n        hash = Math.round(hash / seed2);\n      }\n      hash = hash * seed + str.charCodeAt(i);\n    }\n    return hash;\n  };\n\n  /**\n * Convert RGB Array to HEX\n *\n * @param RGBArray - [R, G, B]\n * @returns 6 digits hex starting with #\n */\n  rgb2hex(RGBArray: number[]): string {\n    let hex = '#';\n    RGBArray.forEach(function(value) {\n      if (value < 16) {\n        hex += 0;\n      }\n      hex += value.toString(16);\n    });\n    return hex;\n  };\n\n  /**\n   * Convert HSL to RGB\n   *\n   * @see {@link http://zh.wikipedia.org/wiki/HSLåHSVè²å½©ç©ºé´} for further information.\n   * @param H Hue â [0, 360)\n   * @param S Saturation â [0, 1]\n   * @param L Lightness â [0, 1]\n   * @returns R, G, B â [0, 255]\n   */\n  hsl2rgb(H: number, S: number, L: number): number[] {\n    H /= 360;\n\n    let q = L < 0.5 ? L * (1 + S) : L + S - L * S;\n    let p = 2 * L - q;\n\n    return [H + 1 / 3, H, H - 1 / 3].map(function(color) {\n      if (color < 0) {\n        color++;\n      }\n      if (color > 1) {\n        color--;\n      }\n      if (color < 1 / 6) {\n        color = p + (q - p) * 6 * color;\n      } else if (color < 0.5) {\n        color = q;\n      } else if (color < 2 / 3) {\n        color = p + (q - p) * 6 * (2 / 3 - color);\n      } else {\n        color = p;\n      }\n      return Math.round(color * 255);\n    });\n  };\n\n\n  /**\n   * Returns the hash in [h, s, l].\n   * Note that H â [0, 360); S â [0, 1]; L â [0, 1];\n   *\n   * @param str string to hash\n   * @returns [h, s, l]\n   */\n  hsl(str: string): any[] {\n    let H;\n    let S;\n    let L;\n    let hash = this.hash(str);\n\n    if (this.hueRanges.length) {\n      let range = this.hueRanges[hash % this.hueRanges.length];\n      let hueResolution = 727; // note that 727 is a prime\n      H = ((hash / this.hueRanges.length) % hueResolution) * (range.max - range.min) / hueResolution + range.min;\n    } else {\n      H = hash % 359; // note that 359 is a prime\n    }\n    hash = Math.round(hash / 360);\n    S = this.S[hash % this.S.length];\n    hash = Math.round(hash / this.S.length);\n    L = this.L[hash % this.L.length];\n\n    return [H, S, L];\n  };\n\n  /**\n   * Returns the hash in [r, g, b].\n   * Note that R, G, B â [0, 255]\n   *\n   * @param str string to hash\n   * @returns [r, g, b]\n   */\n  rgb(str: string): number[] {\n    let hsl = this.hsl(str);\n    return this.hsl2rgb(hsl[0], hsl[1], hsl[2]);\n  };\n\n  /**\n   * Returns the hash in hex\n   *\n   * @param str string to hash\n   * @returns hex with #\n   */\n  hex(str: string): string {\n    let rgb = this.rgb(str);\n    return this.rgb2hex(rgb);\n  };\n}\n","import { Component, HostBinding, OnInit, Input } from '@angular/core';\n\nimport { ColorService } from '../color.service';\n\n@Component({\n  selector: 'ft-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss']\n})\nexport class AvatarComponent implements OnInit {\n  _label: string;\n  _src: string;\n  initials: string;\n  loaded: boolean;\n  @Input()\n  set src(value: string) {\n    if (value && value.trim()!='') {\n      this._src = value;\n      let image = new Image();\n      image.src = value;\n      image.onload = () => {\n        if (\"decode\" in image) {\n          image.decode().then(() => {\n            this.loaded = true;\n          });\n        } else {\n          console.error('Image.decode not available.');\n        }\n      };\n    }\n  }\n  @Input()\n  set label(value: string) {\n    this._label = value;\n    this.initials = this.getInitials(value);\n  }\n  @HostBinding('style.background-color')\n  get backgroundColor(): string {\n    return this.colorService.hex(this._label);\n  }\n  @HostBinding('style.background-image')\n  get backgroundImage(): string {\n    return `url(${this._src})`;\n  }\n\n  constructor(\n    private colorService: ColorService\n  ) { }\n\n  ngOnInit() {\n\n  }\n  getInitials(value: string): string {\n    let allInitials: string[] = value.match(/\\b\\w/g) || [];\n    let initials: string = ((allInitials.shift() || '') + (allInitials.pop() || '')).toUpperCase();\n    return initials;\n  }\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\n\n@Component({\n  selector: 'ft-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n  @Input()\n  name: string;\n  @Input()\n  collection: string;\n  @Input()\n  path: string;\n\n  constructor(\n    @Inject('FactorCommonConfiguration') private configuration\n  ) { }\n\n  ngOnInit() {\n    if (!this.collection) {\n      if (this.configuration.icon && this.configuration.icon.collection) {\n        this.collection = this.configuration.icon.collection;\n      } else {\n        this.collection = 'icons';\n      }\n    }\n    if (!this.path) {\n      if (this.configuration.icon && this.configuration.icon.path) {\n        this.path = this.configuration.icon.path;\n      } else {\n        this.path = 'assets';\n      }\n    }\n  }\n}\n","import { Component, OnInit, Input, HostBinding, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'ft-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit {\n  @HostBinding('class.error')\n  error: boolean;\n  @HostBinding('class.loading')\n  loading: boolean;\n  @Input()\n  src: string;\n  shown: boolean;\n\n  constructor(\n    private element: ElementRef\n  ) { }\n\n  ngOnInit() {\n    if (\"IntersectionObserver\" in window) {\n      let elementObserver = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            let image = new Image();\n            image.src = this.src;\n            setTimeout(() => {\n              this.loading = true;\n            }, 100);\n            image.onerror = () => {\n              this.error = true;\n              this.loading = false;\n            };\n            image.onload = () => {\n              if (\"decode\" in image) {\n                image.decode().then(() => {\n                  this.loading = false;\n                  this.shown = true;\n                });\n              } else {\n                console.error('Image.decode not available.');\n              }\n            };\n            elementObserver.unobserve(this.element.nativeElement);\n          }\n        });\n      }, {\n        rootMargin: \"0px 0px 200px 0px\"\n      });\n      elementObserver.observe(this.element.nativeElement);\n    } else {\n      console.error('IntersectionObserver not available.');\n      this.shown = true;\n    }\n  }\n\n}\n","import { Directive, EventEmitter, HostListener, OnInit, Output, Input, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[ftObserveIntersecting]'\n})\nexport class ObserveIntersectingDirective implements OnInit {\n  @Input('ftObserveIntersectingOptions')\n  options: { root: any, rootMargin: any, threshold: any };\n  @Output('ftObserveIntersecting')\n  event: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(\n    private element: ElementRef\n  ) { }\n\n  ngOnInit() {\n    if (\"IntersectionObserver\" in window) {\n      const elementObserver = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          this.event.emit(entry.isIntersecting);\n        });\n      }, this.options);\n      elementObserver.observe(this.element.nativeElement);\n    } else {\n      console.error('ftObserveIntersecting not available in this browser.');\n    }\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'ft-progress',\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss']\n})\nexport class ProgressComponent implements OnInit {\n  @Input()\n  color: string;\n  @Input()\n  mode: 'determinate' | 'indeterminate' = 'indeterminate';\n  @Input()\n  size: number;\n  @Input()\n  value: number;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.color = 'var(--primary)';\n    this.value = 0;\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule as AngularCommonModule } from '@angular/common';\n\nimport { AvatarComponent } from './avatar/avatar.component';\nimport { IconComponent } from './icon/icon.component';\nimport { ImageComponent } from './image/image.component';\nimport { ObserveIntersectingDirective } from './observe-intersecting.directive';\nimport { ProgressComponent } from './progress/progress.component';\n\n@NgModule({\n  declarations: [\n    AvatarComponent,\n    IconComponent,\n    ImageComponent,\n    ObserveIntersectingDirective,\n    ProgressComponent\n  ],\n  imports: [\n    AngularCommonModule\n  ],\n  exports: [\n    AvatarComponent,\n    IconComponent,\n    ImageComponent,\n    ObserveIntersectingDirective,\n    ProgressComponent\n  ]\n})\nexport class CommonModule {\n  public static forRoot(configuration?: any): ModuleWithProviders {\n    return {\n      ngModule: CommonModule,\n      providers: [\n        { provide: 'FactorCommonConfiguration', useValue: configuration }\n      ]\n    };\n  }\n}\n"],"names":["Injectable","Component","Input","HostBinding","Inject","ElementRef","EventEmitter","Directive","Output","NgModule","AngularCommonModule"],"mappings":"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"}
