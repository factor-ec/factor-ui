{"version":3,"file":"factor-utils.js.map","sources":["ng://factor-utils/lib/storage.service.ts","ng://factor-utils/lib/utils.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n\n  delete(key: string, storage?) {\n    if (storage) {\n      delete storage[key];\n    }else{\n      delete sessionStorage[key];\n    }\n  }\n  get(key: string, storage?) {\n    let parsedValue;\n    let value = storage ? storage[key] : sessionStorage[key];\n    if (value) {\n      try {\n        parsedValue = JSON.parse(value);\n      } catch (err) {\n        parsedValue = value;\n      }\n    }\n    return parsedValue;\n  }\n  set(key: string, value: any, storage?) {\n    if (storage) {\n      storage[key] = JSON.stringify(value);\n    } else {\n      sessionStorage[key] = JSON.stringify(value);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n\n  ],\n  exports: [\n\n  ]\n})\nexport class UtilsModule { }\n"],"names":[],"mappings":";;;;;;AAAA,MAKa,cAAc;IAEzB,iBAAiB;;;;;;IAEjB,MAAM,CAAC,GAAW,EAAE,OAAQ;QAC1B,IAAI,OAAO,EAAE;YACX,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;SACrB;aAAI;YACH,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC;SAC5B;KACF;;;;;;IACD,GAAG,CAAC,GAAW,EAAE,OAAQ;;YACnB,WAAW;;YACX,KAAK,GAAG,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC;QACxD,IAAI,KAAK,EAAE;YACT,IAAI;gBACF,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACjC;YAAC,OAAO,GAAG,EAAE;gBACZ,WAAW,GAAG,KAAK,CAAC;aACrB;SACF;QACD,OAAO,WAAW,CAAC;KACpB;;;;;;;IACD,GAAG,CAAC,GAAW,EAAE,KAAU,EAAE,OAAQ;QACnC,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACtC;aAAM;YACL,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAC7C;KACF;;;YAhCF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACJD,MAaa,WAAW;;;YAXvB,QAAQ,SAAC;gBACR,YAAY,EAAE,EAEb;gBACD,OAAO,EAAE,EAER;gBACD,OAAO,EAAE,EAER;aACF;;;;;;;;;;;;;;;"}
