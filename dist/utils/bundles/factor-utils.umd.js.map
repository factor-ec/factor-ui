{"version":3,"file":"factor-utils.umd.js.map","sources":["ng://factor-utils/lib/files.service.ts","ng://factor-utils/lib/google-analytics.service.ts","ng://factor-utils/lib/google-analytics-error-handler.ts","ng://factor-utils/lib/google-tag-manager-error-handler.ts","ng://factor-utils/lib/google-tag-manager.service.ts","ng://factor-utils/lib/storage.service.ts","ng://factor-utils/lib/utils.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\ndeclare var document: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n  private callback: Function;\n  private fileInput: HTMLInputElement;\n  //private valueChangesSubject: BehaviorSubject<any[]> = new BehaviorSubject<any[]>(null);\n  //private valueChanges: Observable<any[]> = this.valueChangesSubject.asObservable();\n\n  constructor() {\n    this.fileInput = document.createElement('input');\n    //this.fileInput.style.display = 'none';\n    this.fileInput.type = 'file';\n    this.fileInput.addEventListener('change', (event: any) => {\n      const reader = new FileReader();\n      this.loadValue(event.target.files);\n    });\n  }\n  private loadValue(files) {\n    if (files && files.length > 0) {\n      let data: any[] = [];\n      for (let i = 0; i < files.length; i++) {\n        const file = files.item(i);\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          data.push(Object.assign(file, {\n            data: reader.result\n          }));\n          if (data.length == files.length) {\n            //this.valueChangesSubject.next(data.length > 0 ? data : null);\n            this.callback(data.length > 0 ? data : null);\n            this.fileInput.value = null;\n          }\n        };\n      }\n    }\n  }\n  public open(callback: Function, options: { accept?: string, multiple?: boolean }) {\n    this.fileInput.accept = options && options.accept ? options.accept : '';\n    this.fileInput.multiple = options && options.multiple;\n    this.fileInput.click();\n    this.callback = callback;\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { fromEvent } from 'rxjs';\n\ndeclare var gtag: Function;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleAnalyticsService {\n  private trackingId: string;\n\n  constructor(\n    public router: Router\n  ) { }\n  public appendTrackingCode(trackingId: string) {\n    try {\n      if (trackingId) {\n        this.trackingId = trackingId;\n        const s1 = document.createElement('script');\n        s1.async = true;\n        s1.src = `https://www.googletagmanager.com/gtag/js?id=${trackingId}`;\n        document.head.appendChild(s1);\n        const s2 = document.createElement('script');\n        s2.innerHTML = `\n         window.dataLayer = window.dataLayer || [];\n         function gtag(){dataLayer.push(arguments);}\n         gtag('js', new Date());\n         gtag('config', '${trackingId}');\n       `;\n        document.head.appendChild(s2);\n        this.initSubscribers();\n      }\n    } catch (ex) {\n      console.error('Error appending google analytics');\n      console.error(ex);\n    }\n  }\n  private initSubscribers() {\n    this.router.events.subscribe(event => {\n      try {\n        if (typeof gtag === 'function') {\n          if (event instanceof NavigationEnd && this.trackingId) {\n            setTimeout(() => {\n              gtag('config', this.trackingId, {\n                'page_title': document.title,\n                'page_path': event.urlAfterRedirects\n              });\n            }, 100);\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n  public trackEvent(action: string, category: string = null, label: string = null, value: number = null) {\n    if (typeof gtag === 'function') {\n      gtag('event', action, {\n        event_category: category,\n        event_label: label,\n        value: value\n      });\n    }\n  }\n  public trackException(description: string, fatal: boolean) {\n    if (typeof gtag === 'function') {\n      gtag('event', 'exception', {\n        description: description,\n        fatal: fatal\n      });\n    }\n  }\n  public setUserId(userId: string) {\n    if (typeof gtag === 'function') {\n      gtag('set', { 'user_id': userId });\n    }\n  }\n}\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { GoogleAnalyticsService } from './google-analytics.service';\n\n@Injectable()\nexport class GoogleAnalyticsErrorHandler implements ErrorHandler {\n\n  constructor(\n    private injector: Injector\n  ) { }\n\n  handleError(error: Error |Â HttpErrorResponse) {\n    const googleAnalyticsService = this.injector.get(GoogleAnalyticsService);\n    if (error instanceof HttpErrorResponse) {\n      if (navigator.onLine) {\n        const message = error.error ? JSON.stringify(error.error) : error.message;\n        googleAnalyticsService.trackEvent(error.url, 'Http Error', `${error.status} - ${message}`);\n      }\n    } else {\n      const location = this.injector.get(LocationStrategy);\n      const message = error.message ? error.message : error.toString();\n      const stack = error.stack ? error.stack : error.toString();\n      const url = location instanceof PathLocationStrategy ? location.path() : '';\n      googleAnalyticsService.trackEvent(message, 'Javascript Error', stack);\n    }\n    throw error;\n  }\n}\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\n\ndeclare var window: any;\n\n@Injectable()\nexport class GoogleTagManagerErrorHandler implements ErrorHandler {\n\n  constructor(\n    private injector: Injector\n  ) { }\n\n  handleError(error: Error |Â HttpErrorResponse) {\n    if (error instanceof HttpErrorResponse) {\n      if (navigator.onLine) {\n        const message = error.error ? JSON.stringify(error.error) : error.message;\n        window.dataLayer = window.dataLayer || [];\n        window.dataLayer.push({\n          event: 'http_error',\n          'gtm.errorMessage': message,\n          'gtm.errorUrl': error.url,\n          'error_status': error.status\n        });\n      }\n    } /* else {\n      // DEPRECATED: Google Tag Manager automatically collect javascript errors this not neccesary now\n      const location = this.injector.get(LocationStrategy);\n      const message = error.message ? error.message : error.toString();\n      const stack = error.stack ? error.stack : error.toString();\n      const url = location instanceof PathLocationStrategy ? location.path() : '';\n      window.dataLayer = window.dataLayer || [];\n      window.dataLayer.push({\n        event: 'javascript_error',\n        'gtm.errorMessage': message,\n        'gtm.errorUrl': url,\n        'error_stack': stack,\n\n      });\n    }*/\n    throw error;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { HTMLElementExtended } from './html-element-extended';\n\ndeclare var window: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleTagManagerService {\n  trackingId: string;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n  ) { }\n\n  public appendTrackingCode(trackingId: string): void {\n    try {\n      if (isPlatformBrowser(this.platformId) && trackingId) {\n        this.trackingId = trackingId;\n        const s1: HTMLElement = document.createElement('script');\n        s1.innerHTML = `\n          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n          })(window,document,'script','dataLayer','${trackingId}');\n        `;\n        document.head.appendChild(s1);\n        const s2: HTMLElement = document.createElement('noscript');\n        const s3: HTMLIFrameElement = document.createElement('iframe');\n        s3.width = '0';\n        s3.height = '0';\n        s3.style.display = 'none';\n        s3.style.visibility = 'hidden';\n        s3.src = `https://www.googletagmanager.com/ns.html?id=${trackingId}`\n        s2.appendChild(s3);\n        (document.body as HTMLElementExtended).prepend(s2);\n      }\n    } catch (ex) {\n      console.error('Error appending google tag manager');\n      console.error(ex);\n    }\n  }\n  public addVariable(variable) {\n    window.dataLayer = window.dataLayer || [];\n    window.dataLayer.push(variable);\n  }\n}\n","import { Component, Inject, Injectable, OnInit, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport * as CryptoJS from 'crypto-js';\n\n// Only works on client storage\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  memoryStorage: any;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject('FactorUtilsConfiguration') private configuration\n  ) { }\n\n  public delete(key: string, storage?) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (!storage || typeof storage == 'string') {\n        switch (storage) {\n          case 'local':\n          case 'localStorage':\n            delete localStorage[key];\n            break;\n          case 'memory':\n            delete this.memoryStorage[key];\n            break;\n          default:\n            delete sessionStorage[key];\n            break;\n        }\n      } else if (typeof storage == 'object') {\n        delete storage[key];\n      }\n    }\n  }\n  public get(key: string, storage?): any {\n    let parsedValue: any;\n    if (isPlatformBrowser(this.platformId)) {\n      try {\n        parsedValue = JSON.parse(this.getValue(key, storage));\n      } catch (err) {\n        parsedValue = this.getValue(key, storage);\n      }\n    }\n    return parsedValue;\n  }\n  private getValue(key: string, storage?: any): any {\n    let value: any;\n    if (!storage || typeof storage == 'string') {\n      switch (storage) {\n        case 'local':\n        case 'localStorage':\n          value = localStorage[key];\n          break;\n        case 'memory':\n          value = this.memoryStorage[key];\n          break;\n        default:\n          value = sessionStorage[key];\n          break;\n      }\n    } else if (typeof storage == 'object') {\n      value = storage[key];\n    }\n    return this.decrypt(value);\n  }\n  private decrypt(value: string) {\n    if (value !== null &&\n      value !== undefined &&\n      value !== '' &&\n      this.configuration &&\n      this.configuration.storage &&\n      this.configuration.storage.encryptionSecret) {\n      const decryptedValue = CryptoJS.AES.decrypt(value, this.configuration.storage.encryptionSecret);\n      value = decryptedValue.toString(CryptoJS.enc.Utf8);\n    }\n    return value;\n  }\n  private encrypt(value: string) {\n    if (value !== null &&\n      value !== undefined &&\n      value !== '' &&\n      this.configuration &&\n      this.configuration.storage &&\n      this.configuration.storage.encryptionSecret) {\n      value = CryptoJS.AES.encrypt(value, this.configuration.storage.encryptionSecret);\n      return value.toString();\n    } else {\n      return value;\n    }\n\n  }\n  public set(key: string, value: any, storage?) {\n    if (isPlatformBrowser(this.platformId)) {\n      const valueEncrypted = this.encrypt(JSON.stringify(value));\n      if (!storage || typeof storage == 'string') {\n        switch (storage) {\n          case 'local':\n          case 'localStorage':\n            localStorage[key] = valueEncrypted;\n            break;\n          case 'memory':\n            this.memoryStorage[key] = valueEncrypted;\n            break;\n          default:\n            sessionStorage[key] = valueEncrypted;\n            break;\n        }\n      } else {\n        storage[key] = valueEncrypted;\n      }\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n\n  ],\n  exports: [\n\n  ]\n})\nexport class UtilsModule {\n  public static forRoot(configuration: any): ModuleWithProviders {\n    return {\n      ngModule: UtilsModule,\n      providers: [\n        { provide: 'FactorUtilsConfiguration', useValue: configuration }\n      ]\n    };\n  }\n}\n"],"names":["Injectable","NavigationEnd","Router","HttpErrorResponse","LocationStrategy","PathLocationStrategy","Injector","isPlatformBrowser","Inject","PLATFORM_ID","CryptoJS.AES","CryptoJS.enc","NgModule"],"mappings":"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"}
