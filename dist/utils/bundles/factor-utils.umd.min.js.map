{"version":3,"sources":["ng://factor-utils/lib/storage.service.ts","ng://factor-utils/lib/google-analytics.service.ts","ng://factor-utils/lib/utils.module.ts"],"names":["StorageService","prototype","delete","key","storage","sessionStorage","get","parsedValue","value","JSON","parse","err","set","stringify","Injectable","args","providedIn","GoogleAnalyticsService","router","_this","this","events","subscribe","event","gtag","NavigationEnd","trackingId","setTimeout","page_title","document","title","page_path","urlAfterRedirects","e","console","error","appendTrackingCode","s1","createElement","async","src","head","appendChild","s2","innerHTML","ex","trackEvent","action","category","label","event_category","event_label","trackException","description","fatal","setUserId","userId","user_id","Router","UtilsModule","forRoot","configuration","ngModule","providers","provide","useValue","NgModule","declarations","imports","exports"],"mappings":"iUAAA,IAAAA,EAAA,WAOE,SAAAA,YAEAA,EAAAC,UAAAC,UAAA,SAAOC,EAAaC,GACdA,SACKA,EAAQD,UAERE,eAAeF,IAG1BH,EAAAC,UAAAK,IAAA,SAAIH,EAAaC,OACXG,EACAC,EAAQJ,EAAUA,EAAQD,GAAOE,eAAeF,GACpD,GAAIK,EACF,IACED,EAAcE,KAAKC,MAAMF,GACzB,MAAOG,GACPJ,EAAcC,EAGlB,OAAOD,GAETP,EAAAC,UAAAW,IAAA,SAAIT,EAAaK,EAAYJ,GACvBA,EACFA,EAAQD,GAAOM,KAAKI,UAAUL,GAE9BH,eAAeF,GAAOM,KAAKI,UAAUL,wBA9B1CM,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAWE,SAAAA,EACSC,GADT,IAAAC,EAAAC,MACSA,KAAAF,OAAAA,GAEAG,OAAOC,UAAS,SAACC,GACtB,IACsB,mBAATC,MACLD,aAAiBE,EAAAA,eAAiBN,EAAKO,YACzCC,WAAU,WACRH,KAAK,SAAUL,EAAKO,WAAY,CAC9BE,WAAcC,SAASC,MACvBC,UAAaR,EAAMS,qBAEpB,KAGP,MAAOC,GACPC,QAAQC,MAAMF,aAIbhB,EAAAhB,UAAAmC,mBAAP,SAA0BV,GACxB,IACE,GAAIA,EAAY,CACdN,KAAKM,WAAaA,MACZW,EAAKR,SAASS,cAAc,UAClCD,EAAGE,OAAQ,EACXF,EAAGG,IAAM,+CAA+Cd,EACxDG,SAASY,KAAKC,YAAYL,OACpBM,EAAKd,SAASS,cAAc,UAClCK,EAAGC,UAAY,2KAIIlB,EAAU,eAE7BG,SAASY,KAAKC,YAAYC,IAE5B,MAAOE,GACPX,QAAQC,MAAM,oCACdD,QAAQC,MAAMU,KAGX5B,EAAAhB,UAAA6C,WAAP,SAAkBC,EAAgBC,EAAyBC,EAAsBzC,QAA/C,IAAAwC,IAAAA,EAAA,WAAyB,IAAAC,IAAAA,EAAA,WAAsB,IAAAzC,IAAAA,EAAA,MAC3D,mBAATgB,MACTA,KAAK,QAASuB,EAAQ,CACpBG,eAAgBF,EAChBG,YAAaF,EACbzC,MAAOA,KAINS,EAAAhB,UAAAmD,eAAP,SAAsBC,EAAqBC,GACrB,mBAAT9B,MACTA,KAAK,QAAS,YAAa,CACzB6B,YAAaA,EACbC,MAAOA,KAINrC,EAAAhB,UAAAsD,UAAP,SAAiBC,GACK,mBAAThC,MACTA,KAAK,MAAO,CAAEiC,QAAWD,yBAnE9B1C,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDALU0C,EAAAA,mIADxB,GCAAC,EAAA,WAEA,SAAAA,KAoBA,OARgBA,EAAAC,QAAd,SAAsBC,GACpB,MAAO,CACLC,SAAUH,EACVI,UAAW,CACT,CAAEC,QAAS,2BAA4BC,SAAUJ,0BAhBxDK,EAAAA,SAAQnD,KAAA,CAAC,CACRoD,aAAc,GAGdC,QAAS,GAGTC,QAAS,OAaXV,EAtBA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n\n  delete(key: string, storage?) {\n    if (storage) {\n      delete storage[key];\n    } else {\n      delete sessionStorage[key];\n    }\n  }\n  get(key: string, storage?) {\n    let parsedValue;\n    let value = storage ? storage[key] : sessionStorage[key];\n    if (value) {\n      try {\n        parsedValue = JSON.parse(value);\n      } catch (err) {\n        parsedValue = value;\n      }\n    }\n    return parsedValue;\n  }\n  set(key: string, value: any, storage?) {\n    if (storage) {\n      storage[key] = JSON.stringify(value);\n    } else {\n      sessionStorage[key] = JSON.stringify(value);\n    }\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\ndeclare var gtag: Function;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleAnalyticsService {\n  private trackingId: string;\n\n  constructor(\n    public router: Router\n  ) {\n    router.events.subscribe(event => {\n      try {\n        if (typeof gtag === 'function') {\n          if (event instanceof NavigationEnd && this.trackingId) {\n            setTimeout(() => {\n              gtag('config', this.trackingId, {\n                'page_title': document.title,\n                'page_path': event.urlAfterRedirects\n              });\n            }, 100);\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n  public appendTrackingCode(trackingId: string) {\n    try {\n      if (trackingId) {\n        this.trackingId = trackingId;\n        const s1 = document.createElement('script');\n        s1.async = true;\n        s1.src = `https://www.googletagmanager.com/gtag/js?id=${trackingId}`;\n        document.head.appendChild(s1);\n        const s2 = document.createElement('script');\n        s2.innerHTML = `\n         window.dataLayer = window.dataLayer || [];\n         function gtag(){dataLayer.push(arguments);}\n         gtag('js', new Date());\n         gtag('config', '${trackingId}');\n       `;\n        document.head.appendChild(s2);\n      }\n    } catch (ex) {\n      console.error('Error appending google analytics');\n      console.error(ex);\n    }\n  }\n  public trackEvent(action: string, category: string = null, label: string = null, value: number = null) {\n    if (typeof gtag === 'function') {\n      gtag('event', action, {\n        event_category: category,\n        event_label: label,\n        value: value\n      });\n    }\n  }\n  public trackException(description: string, fatal: boolean) {\n    if (typeof gtag === 'function') {\n      gtag('event', 'exception', {\n        description: description,\n        fatal: fatal\n      });\n    }\n  }\n  public setUserId(userId: string) {\n    if (typeof gtag === 'function') {\n      gtag('set', { 'user_id': userId });\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\n@NgModule({\n  declarations: [\n\n  ],\n  imports: [\n\n  ],\n  exports: [\n\n  ]\n})\nexport class UtilsModule {\n  public static forRoot(configuration: any): ModuleWithProviders {\n    return {\n      ngModule: UtilsModule,\n      providers: [\n        { provide: 'FactorUtilsConfiguration', useValue: configuration }\n      ]\n    };\n  }\n}\n"]}